{"version":3,"sources":["components/Header.jsx","data/osiData.js","components/OSILayer.jsx","components/OSILayerColumn.jsx","components/BuildUpPacket.jsx","components/PopupDetails.jsx","components/OSIVisualization.jsx","App.js","index.js"],"names":["Header","React","createElement","style","backgroundColor","color","padding","textAlign","boxShadow","margin","fontSize","fontWeight","osiLayerInfo","application","name","description","protocols","presentation","session","transport","network","dataLink","physical","osiData","key","layerIcons","OSILayer","_ref","layerKey","highlighted","onHighlight","onClick","layerData","layerStyle","border","borderRadius","background","cursor","display","alignItems","justifyContent","gap","transition","onMouseEnter","onMouseLeave","OSILayerColumn","title","layers","highlightedLayer","className","map","layer","headerColors","AH","PH_PRESENTATION","PH_SESSION","TH","NH","DH","BIT","DATA","packetInfo","BuildUpPacket","selectedPacket","setSelectedPacket","useState","packetData","rowStyle","isHighlighted","boxStyle","packet","whiteSpace","animation","bitStyle","_objectSpread","width","highlightPacket","_packetData$layer","includes","flexDirection","Object","entries","_ref2","index","packets","idx","borderColor","handlePacketClick","startsWith","position","top","left","transform","zIndex","onMouseOver","e","target","onMouseOut","PopupDetails","onClose","closeButtonStyle","marginTop","closeButtonHoverStyle","marginBottom","listStyleType","protocol","OSIVisualization","setHighlightedLayer","selectedLayer","setSelectedLayer","isAnimating","setIsAnimating","packetLogs","setPacketLogs","searchKeyword","setSearchKeyword","speed","setSpeed","logRef","useRef","useEffect","current","scrollTop","scrollHeight","startAnimation","direction","reverse","forEach","setTimeout","prevLayer","prevLogs","concat","length","filteredLogs","filter","log","toLowerCase","find","l","type","min","max","step","value","onChange","ref","placeholder","clearLogs","slice","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.511475e9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  const headerStyle = {\r\n    backgroundColor: \"#1d3557\", // 진한 파란색\r\n    color: \"white\",\r\n    padding: \"15px\",\r\n    textAlign: \"left\",\r\n    boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n  };\r\n\r\n  const titleStyle = {\r\n    margin: \"0\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 style={titleStyle}>OSI 7계층 패킷 시뮬레이터</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const osiData = [\r\n    { key: \"application\", name: \"응용 계층(7계층)\", description: \"데이터 생성 및 전송 \\n 사용자와 네트워크 간의 인터페이스 제공\", protocols:[\"HTTP\", \"DHCP\",\"Telnet\", \"FTP\"], },\r\n    { key: \"presentation\", name: \"표현 계층(6계층)\", description: \"데이터 형식 변환 및 암호화\",protocols: [\"ASCII\", \"JPEG\", \"MPEG\"], },\r\n    { key: \"session\", name: \"세션 계층(5계층)\", description: \"데이터 교환을 위한 논리적 연결을 \\n설정, 관리, 종료 진행 \\n\\ 즉, 세션 관리\", protocols: [\"SSH\", \"TLS\", \"RPC\"], },\r\n    { key: \"transport\", name: \"전송 계층(4계층)\", description: \"데이터의 전송을 신뢰성 있고 효율적으로 관리\",protocols: [\"TCP\", \"UDP\"] },\r\n    { key: \"network\", name: \"네트워크 계층(3계층)\", description: \"라우팅 및 IP 주소 관리 \\n 즉, 데이터 경로 설정과 라우팅 수행\",protocols: [\"IP\", \"ICMP\"] },\r\n    { key: \"dataLink\", name: \"데이터링크계층(2계층)\", description: \"프레임 생성,\\n 제어노드 간 데이터 전송과 에러 감지를 담당\", protocols: [\"Ethernet\", \"PPP\"], },\r\n    { key: \"physical\", name: \"물리 계층(1계층)\", description: \"비트 전송과 물리적 연결을 담당\", protocols: [\"RS-232\", \"RS-485\", \"1000BASE-T\"], },\r\n  ];\r\n  \r\n  \r\n  export const osiLayerInfo = {\r\n    application: {\r\n      name: \"응용 계층\",\r\n      description: \"사용자와 네트워크 간의 인터페이스를 제공하며, 데이터 생성 및 전송을 담당합니다.\",\r\n      protocols: [\"HTTP\", \"SMTP\", \"FTP\"],\r\n    },\r\n    presentation: {\r\n      name: \"표현 계층\",\r\n      description: \"데이터 형식 변환 및 암호화를 담당합니다.\",\r\n      protocols: [\"SSL\", \"TLS\"],\r\n    },\r\n    session: {\r\n      name: \"세션 계층\",\r\n      description: \"데이터 교환을 위한 논리적 연결을 설정, 관리, 종료합니다.\",\r\n      protocols: [\"NetBIOS\", \"PPTP\"],\r\n    },\r\n    transport: {\r\n      name: \"전송 계층\",\r\n      description: \"데이터의 전송을 신뢰성 있고 효율적으로 관리합니다.\",\r\n      protocols: [\"TCP\", \"UDP\"],\r\n    },\r\n    network: {\r\n      name: \"네트워크 계층\",\r\n      description: \"데이터의 경로를 설정하고 라우팅을 수행합니다.\",\r\n      protocols: [\"IP\", \"ICMP\"],\r\n    },\r\n    dataLink: {\r\n      name: \"데이터링크 계층\",\r\n      description: \"노드 간 데이터 전송과 에러 감지를 담당합니다.\",\r\n      protocols: [\"Ethernet\", \"PPP\"],\r\n    },\r\n    physical: {\r\n      name: \"물리 계층\",\r\n      description: \"비트 전송과 물리적 연결을 담당합니다.\",\r\n      protocols: [\"Wi-Fi\", \"Bluetooth\"],\r\n    },\r\n  };  \r\n\r\n  export default osiData;\r\n  ","import React from \"react\";\r\nimport { osiLayerInfo } from \"../data/osiData\";\r\n\r\n// 계층별 아이콘 추가\r\nconst layerIcons = {\r\n  application: \"🌐\",\r\n  presentation: \"🎨\",\r\n  session: \"🔗\",\r\n  transport: \"🚀\",\r\n  network: \"🌍\",\r\n  dataLink: \"🔧\",\r\n  physical: \"⚡\",\r\n};\r\n\r\nconst OSILayer = ({ layerKey, highlighted, onHighlight, onClick }) => {\r\n  const layerData = osiLayerInfo[layerKey];\r\n\r\n  if (!layerData) return null;\r\n\r\n  const layerStyle = {\r\n    margin: \"10px 0\",\r\n    padding: \"15px\",\r\n    border: highlighted ? \"2px solid #007bff\" : \"1px solid gray\",\r\n    borderRadius: \"10px\",\r\n    background: highlighted\r\n      ? \"linear-gradient(to right, #007bff, #6610f2)\"\r\n      : \"white\",\r\n    color: highlighted ? \"white\" : \"black\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"bold\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    gap: \"10px\",\r\n    transition: \"background 0.3s ease\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={layerStyle}\r\n      onMouseEnter={() => onHighlight(layerKey)}\r\n      onMouseLeave={() => onHighlight(null)}\r\n      onClick={() => onClick(layerKey)}\r\n    >\r\n      {layerIcons[layerKey]} {layerData.name}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OSILayer;\r\n","import React from \"react\";\r\nimport OSILayer from \"./OSILayer\";\r\n\r\nconst OSILayerColumn = ({ title, layers, highlightedLayer, onHighlight, onClick }) => {\r\n  return (\r\n    <div className=\"osi-layer-column\" style={{ padding: \"10px\", textAlign: \"center\" }}>\r\n      <h3>{title}</h3>\r\n      {layers.map((layer) => (\r\n        <OSILayer\r\n          key={layer.key}\r\n          layerKey={layer.key}\r\n          highlighted={highlightedLayer === layer.key}\r\n          onHighlight={onHighlight}\r\n          onClick={onClick}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OSILayerColumn;\r\n","import React, { useState } from \"react\";\r\n\r\n// 헤더 타입별 색상 정의\r\nconst headerColors = {\r\n  AH: \"#ff4d4d\", // Red\r\n  PH_PRESENTATION: \"#ff66cc\", // Pink (Presentation 계층 PH)\r\n  PH_SESSION: \"#a64dff\", // Purple (Session 계층 PH)\r\n  TH: \"#4da6ff\", // Blue\r\n  NH: \"#00cc99\", // Green\r\n  DH: \"#ffcc00\", // Yellow\r\n  BIT: \"#4a4a4a\", // Dark Gray\r\n  DATA: \"#000000\", // Black\r\n};\r\n\r\n// 패킷별 상세 정보 정의\r\nconst packetInfo = {\r\n  AH: \"Application Header \\n 사용자와 네트워크 간의 인터페이스를\\n 제공하며 데이터를 생성.\",\r\n  PH_PRESENTATION: \"Presentation Header \\n 데이터를 특정 형식으로 변환하거나\\n 암호화/복호화를 수행.\",\r\n  PH_SESSION: \"Session Header \\n 통신 세션을 설정, 관리, 종료하는 데\\n 필요한 정보를 포함.\",\r\n  TH: \"Transport Header \\n 데이터의 신뢰성을 보장하고,\\n 패킷 재전송 및 순서 제어를 담당.\",\r\n  NH: \"Network Header \\n 데이터의 경로를 설정하고 라우팅을 수행.\",\r\n  DH: \"Data Link Header \\n 노드 간 데이터 전송과 에러 감지를 담당.\",\r\n  BIT: \"Binary Data \\n 물리 계층을 통해 전송되는\\n 비트 단위 데이터.\",\r\n  DATA: \"Payload Data \\n 상위 계층에서 생성된 최종 데이터로,\\n 전송해야 할 핵심 데이터 내용.\",\r\n};\r\n\r\nconst BuildUpPacket = ({ highlightedLayer }) => {\r\n  const [selectedPacket, setSelectedPacket] = useState(null);\r\n\r\n  const packetData = {\r\n    application: [\"AH\", \"DATA\"],\r\n    presentation: [\"PH_PRESENTATION\", \"AH\", \"DATA\"],\r\n    session: [\"PH_SESSION\", \"PH_PRESENTATION\", \"AH\", \"DATA\"],\r\n    transport: [\"TH\", \"PH_SESSION\", \"PH_PRESENTATION\", \"AH\", \"DATA\"],\r\n    network: [\"NH\", \"TH\", \"PH_SESSION\", \"PH_PRESENTATION\", \"AH\", \"DATA\"],\r\n    dataLink: [\"DH\", \"NH\", \"TH\", \"PH_SESSION\", \"PH_PRESENTATION\", \"AH\", \"DATA\", \"DH\"],\r\n    physical: [\"BIT\"],\r\n  };\r\n\r\n  // 패킷 클릭 시 정보 표시\r\n  const handlePacketClick = (packet) => {\r\n    setSelectedPacket(packet);\r\n  };\r\n\r\n  const containerStyle = {\r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    gap: \"15px\",\r\n  };\r\n\r\n  const rowStyle = (isHighlighted) => ({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    gap: \"10px\",\r\n    backgroundColor: isHighlighted ? \"lightblue\" : \"white\",\r\n    padding: \"5px\",\r\n    borderRadius: \"4px\",\r\n    transition: \"background-color 0.3s ease\",\r\n  });\r\n\r\n  const boxStyle = (packet) => ({\r\n    border: \"2px solid black\",\r\n    padding: \"8px 12px\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"bold\",\r\n    whiteSpace: \"nowrap\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"5px\",\r\n    backgroundColor: headerColors[packet] || \"gray\",\r\n    color: packet === \"DATA\" ? \"white\" : \"black\",\r\n    transition: \"border-color 0.3s ease\",\r\n    animation: highlightedLayer ? \"pulse 1.5s infinite\" : \"none\",\r\n  });\r\n\r\n  const bitStyle = {\r\n    ...boxStyle(\"BIT\"),\r\n    width: \"400px\", // 가로 길이 증가\r\n    padding: \"12px 20px\", // 패딩 조정\r\n    fontSize: \"16px\", // 글꼴 크기 증가\r\n    textAlign: \"center\", // 텍스트 정렬\r\n  };\r\n\r\n  const highlightPacket = (layer, packet) =>\r\n    highlightedLayer === layer && packetData[layer]?.includes(packet);\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h2>Build-Up Packet</h2>\r\n      {Object.entries(packetData).map(([layer, packets], index) => (\r\n        <div key={index} style={rowStyle(layer === highlightedLayer)}>\r\n          {packets.map((packet, idx) => (\r\n            <div\r\n              key={idx}\r\n              style={{\r\n                ...(packet === \"BIT\" ? bitStyle : boxStyle(packet)),\r\n                borderColor: highlightPacket(layer, packet) ? \"orange\" : \"black\",\r\n              }}\r\n              onClick={() => handlePacketClick(packet)}\r\n            >\r\n              {/* UI에서는 모든 PH를 동일하게 \"PH\"로 표시 */}\r\n              {packet.startsWith(\"PH_\") ? \"PH\" : packet}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n\r\n      {/* 패킷 정보 팝업 */}\r\n      {selectedPacket && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\r\n            width: \"300px\",\r\n            textAlign: \"center\",\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          <h3>Packet Info</h3>\r\n          <p style={{ whiteSpace: \"pre-line\" }}>\r\n            <strong>\r\n              {selectedPacket.startsWith(\"PH_\") ? \"PH\" : selectedPacket}\r\n            </strong>\r\n          </p>\r\n          <p style={{ whiteSpace: \"pre-line\" }}>\r\n            {packetInfo[selectedPacket] ||\r\n              \"No additional information available.\"}\r\n          </p>\r\n          <button\r\n            onClick={() => setSelectedPacket(null)}\r\n            style={{\r\n              padding: \"10px 15px\",\r\n              backgroundColor: \"#e63946\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              borderRadius: \"6px\",\r\n              fontSize: \"14px\",\r\n              cursor: \"pointer\",\r\n              fontWeight: \"bold\",\r\n              transition: \"background-color 0.3s ease\",\r\n            }}\r\n            onMouseOver={(e) => (e.target.style.backgroundColor = \"#c92a2a\")}\r\n            onMouseOut={(e) => (e.target.style.backgroundColor = \"#e63946\")}\r\n          >\r\n            닫기\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildUpPacket;\r\n","import React from \"react\";\r\n\r\nconst PopupDetails = ({ layer, onClose }) => {\r\n  // layer가 없을 경우 null 반환\r\n  if (!layer) return null;\r\n\r\n  const popupStyle = {\r\n    position: \"fixed\",\r\n    top: \"50%\", // 화면 중앙\r\n    left: \"50%\", // 화면 중앙\r\n    transform: \"translate(-50%, -50%)\", // 중앙 정렬\r\n    backgroundColor: \"white\",\r\n    border: \"1px solid #ccc\",\r\n    padding: \"20px\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0 5px 15px rgba(0, 0, 0, 0.3)\",\r\n    width: \"350px\",\r\n    zIndex: 1000,\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  const closeButtonStyle = {\r\n    marginTop: \"15px\",\r\n    padding: \"10px 20px\",\r\n    backgroundColor: \"#e63946\", // 밝은 빨간색\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"6px\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n    transition: \"background-color 0.3s ease\",\r\n  };\r\n\r\n  const closeButtonHoverStyle = {\r\n    backgroundColor: \"#c92a2a\", // 더 진한 빨간색\r\n  };\r\n\r\n  const protocols = layer.protocols || []; // protocols가 없을 경우 빈 배열로 처리\r\n\r\n  return (\r\n    <div style={popupStyle}>\r\n      <h2 style={{ color: \"#007bff\", marginBottom: \"10px\" }}>{layer.name}</h2>\r\n      <p style={{ whiteSpace: \"pre-line\", fontSize: \"14px\", color: \"#333\" }}>\r\n        {layer.description}\r\n      </p>\r\n      <strong style={{ display: \"block\", margin: \"10px 0\" }}>Protocols:</strong>\r\n      <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n        {protocols.map((protocol) => (\r\n          <li\r\n            key={protocol}\r\n            style={{\r\n              padding: \"5px\",\r\n              backgroundColor: \"#f1f3f5\",\r\n              borderRadius: \"5px\",\r\n              margin: \"3px 0\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            {protocol}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeButtonStyle}\r\n        onMouseOver={(e) => (e.target.style.backgroundColor = closeButtonHoverStyle.backgroundColor)}\r\n        onMouseOut={(e) => (e.target.style.backgroundColor = closeButtonStyle.backgroundColor)}\r\n      >\r\n        닫기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopupDetails;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport OSILayerColumn from \"./OSILayerColumn\";\r\nimport BuildUpPacket from \"./BuildUpPacket\";\r\nimport PopupDetails from \"./PopupDetails\";\r\nimport osiData from \"../data/osiData\";\r\nimport \"../App.css\";\r\n\r\nconst OSIVisualization = () => {\r\n  const [highlightedLayer, setHighlightedLayer] = useState(null);\r\n  const [selectedLayer, setSelectedLayer] = useState(null);\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [packetLogs, setPacketLogs] = useState([]);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [speed, setSpeed] = useState(1000);\r\n  const logRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (logRef.current) {\r\n      logRef.current.scrollTop = logRef.current.scrollHeight;\r\n    }\r\n  }, [packetLogs]);\r\n\r\n  const startAnimation = (direction) => {\r\n    if (isAnimating) return;\r\n    setIsAnimating(true);\r\n  \r\n    // 방향에 따라 계층 순서를 결정\r\n    const layers = direction === \"sender\" ? osiData : [...osiData].reverse();\r\n  \r\n    layers.forEach((layer, index) => {\r\n      setTimeout(() => {\r\n        setHighlightedLayer(layer.key);\r\n  \r\n        // 이전 계층이 존재하는 경우 로그 형식 변경\r\n        if (index > 0) {\r\n          const prevLayer = layers[index - 1];\r\n          setPacketLogs((prevLogs) => [\r\n            `[${direction === \"sender\" ? \"전송\" : \"수신\"}] ${prevLayer.name} → ${layer.name}`,\r\n            ...prevLogs,\r\n          ]);\r\n        }\r\n  \r\n        if (index === layers.length - 1) {\r\n          setTimeout(() => {\r\n            setHighlightedLayer(null);\r\n            setIsAnimating(false);\r\n          }, speed);\r\n        }\r\n      }, index * speed);\r\n    });\r\n  };  \r\n\r\n  const clearLogs = () => {\r\n    setPacketLogs([]);\r\n  };\r\n\r\n  const handleLayerClick = (layerKey) => {\r\n    const layer = osiData.find((l) => l.key === layerKey);\r\n    setSelectedLayer(layer || null);\r\n  };\r\n\r\n  const filteredLogs = packetLogs.filter((log) =>\r\n    log.toLowerCase().includes(searchKeyword.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"osi-visualization\">\r\n      <div className=\"osi-left\">\r\n        <OSILayerColumn\r\n          title=\"계층 구조\"\r\n          layers={osiData}\r\n          highlightedLayer={highlightedLayer}\r\n          onHighlight={setHighlightedLayer}\r\n          onClick={handleLayerClick}\r\n        />\r\n        <hr className=\"divider\" />\r\n        <div className=\"buttons\">\r\n          <button className=\"send-button\" onClick={() => startAnimation(\"sender\")}>\r\n            전송 시작\r\n          </button>\r\n          <button className=\"receive-button\" onClick={() => startAnimation(\"receiver\")}>\r\n            수신 시작\r\n          </button>\r\n          <input\r\n            type=\"range\"\r\n            min=\"500\"\r\n            max=\"3000\"\r\n            step=\"100\"\r\n            value={speed}\r\n            onChange={(e) => setSpeed(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <hr className=\"vertical-divider\" />\r\n      \r\n      <div className=\"osi-center\">\r\n        <BuildUpPacket highlightedLayer={highlightedLayer} />\r\n      </div>\r\n      \r\n      <hr className=\"vertical-divider\" />\r\n      \r\n      <div className=\"osi-right\" ref={logRef}>\r\n        <div className=\"log-header\">\r\n          <h3>패킷 이동 로그</h3>\r\n          <input\r\n            type=\"text\"\r\n            className=\"log-search\"\r\n            placeholder=\"로그 검색...\"\r\n            value={searchKeyword}\r\n            onChange={(e) => setSearchKeyword(e.target.value)}\r\n          />\r\n          <button className=\"clear-log-button\" onClick={clearLogs}>\r\n            로그 초기화\r\n          </button>\r\n        </div>\r\n        <ul className=\"log-list\">\r\n          {filteredLogs.slice(0, 20).map((log, index) => (\r\n            <li key={index} className={index === 0 ? \"highlight-log\" : \"log-item\"}>\r\n              {log}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {selectedLayer && (\r\n        <PopupDetails layer={selectedLayer} onClose={() => setSelectedLayer(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OSIVisualization;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport OSIVisualization from \"./components/OSIVisualization\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Header />\n      <OSIVisualization />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n// React 18 방식: createRoot 사용\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}